{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","services/MarvelService.jsx","hooks/http.hook.jsx","resources/img/mjolnir.png","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/pages/MainPage.jsx"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharlist","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","charlist","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.40c536af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst { loading, request, error, clearError } = useHttp();\n\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\tconst _apiKey = \"apikey=f812955ce4ccbd38381d99c4c1e401be\";\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects.language || \"en-us\",\n\t\t\tprice: comics.prices.price\n\t\t\t\t? `${comics.prices.price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\treturn { loading, error, getAllCharacters, getCharacter, clearError, getComic, getAllComics };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = \"GET\",\n\t\t\tbody = null,\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\n\t\t) => {\n\t\t\tsetLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tsetLoading(false);\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn { loading, request, error, clearError };\n};\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null);\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\tconst timerId = setInterval(updateChar, 60000);\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId);\n\t\t};\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n\t\tgetCharacter(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img\n\t\t\t\t\tsrc={mjolnir}\n\t\t\t\t\talt=\"mjolnir\"\n\t\t\t\t\tclassName=\"randomchar__decoration\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char;\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (\n\t\tthumbnail ===\n\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t) {\n\t\timgStyle = { objectFit: \"contain\" };\n\t}\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img\n\t\t\t\tsrc={thumbnail}\n\t\t\t\talt=\"Random character\"\n\t\t\t\tclassName=\"randomchar__img\"\n\t\t\t\tstyle={imgStyle}\n\t\t\t/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport \"./charList.scss\";\n\nconst CharList = (props) => {\n\n\tconst [charList, setCharlist] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst {loading, error, getAllCharacters} = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharListLoaded)\n\n\t};\n\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharlist(charlist => [...charList, ...newCharList]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(charEnded => ended);\n\t};\n\n\tconst itemRefs = useRef([]);\n\n\n\n\tconst focusOnItem = (id) => {\n\t\t// Я реализовал вариант чуть сложнее, и с классом и с фокусом\n\t\t// Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n\t\t// На самом деле, решение с css-классом можно сделать, вынеся персонажа\n\t\t// в отдельный компонент. Но кода будет больше, появится новое состояние\n\t\t// и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n\t\t// По возможности, не злоупотребляйте рефами, только в крайних случаях\n\t\titemRefs.current.forEach((item) =>\n\t\t\titem.classList.remove(\"char__item_selected\")\n\t\t);\n\t\titemRefs.current[id].classList.add(\"char__item_selected\");\n\t\titemRefs.current[id].focus();\n\t};\n\n\t// Этот метод создан для оптимизации,\n\t// чтобы не помещать такую конструкцию в метод render\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: \"cover\" };\n\t\t\tif (\n\t\t\t\titem.thumbnail ===\n\t\t\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t\t\t) {\n\t\t\t\timgStyle = { objectFit: \"unset\" };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={el => itemRefs.current[i] = el}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\tif (e.key === \" \" || e.key === \"Enter\") {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\tstyle={imgStyle}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\t// А эта конструкция вынесена для центровки спиннера/ошибки\n\t\treturn <ul className=\"char__grid\">{items}</ul>;  \n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? \"none\" : \"block\" }}\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n\n\tconst [char, setChar] = useState(null);\n\n\tconst {loading, error, getCharacter} = useMarvelService();\n\n\tuseEffect (() => {\n\t\tupdateChar();\n\t}, [props.charId])\n\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\n\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t};\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(loading || error || !char) ? (\n\t\t<View char={char} />\n\t) : null;\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t);\n}\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char;\n\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (\n\t\tthumbnail ===\n\t\t\"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n\t) {\n\t\timgStyle = { objectFit: \"contain\" };\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">{description}</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comics.length > 0\n\t\t\t\t\t? null\n\t\t\t\t\t: \"There is no comics with this character\"}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default CharInfo;\n","import {Component} from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n\tstate = {\n\t\terror: false\n\t}\n\n\tstatic detDerivedStateFromError(error) {\n\t\treturn {error: true}\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\tconsole.log(error, errorInfo);\n\t\tthis.setState({error: true});\n\t}\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn <ErrorMessage/>\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport decoration from \"../../resources/img/vision.png\";\n\nconst MainPage = () => {\n\tconst [selectedChar, setChar] = useState(null);\n\n\tconst onCharSelected = (id) => {\n\t\tsetChar(id);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ErrorBoundary>\n\t\t\t\t<RandomChar />\n\t\t\t</ErrorBoundary>\n\t\t\t<div className=\"char__content\">\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\n\t\t\t\t</ErrorBoundary>\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CharInfo charId={selectedChar} />\n\t\t\t\t</ErrorBoundary>\n\t\t\t</div>\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n\t\t</>\n\t);\n}\n\nexport default MainPage;\n"],"sourceRoot":""}