{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","services/MarvelService.jsx","hooks/http.hook.jsx","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.jsx","components/comicsList/ComicsList.jsx","components/pages/ComicsPage.jsx"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage"],"mappings":"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","file":"static/js/4.43de7aa3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst { loading, request, error, clearError } = useHttp();\n\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\tconst _apiKey = \"apikey=f812955ce4ccbd38381d99c4c1e401be\";\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects.language || \"en-us\",\n\t\t\tprice: comics.prices.price\n\t\t\t\t? `${comics.prices.price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\treturn { loading, error, getAllCharacters, getCharacter, clearError, getComic, getAllComics };\n};\n\nexport default useMarvelService;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = \"GET\",\n\t\t\tbody = null,\n\t\t\theaders = { \"Content-Type\": \"application/json\" }\n\t\t) => {\n\t\t\tsetLoading(true);\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tsetLoading(false);\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn { loading, request, error, clearError };\n};\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setnewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst { loading, error, getAllComics } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true);\n\t\tgetAllComics(offset).then(onComicsListLoaded);\n\t};\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList]);\n\t\tsetnewItemLoading(false);\n\t\tsetOffset(offset + 8);\n\t\tsetComicsEnded(ended);\n\t};\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\" key={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={item.thumbnail}\n\t\t\t\t\t\t\talt={item.title}\n\t\t\t\t\t\t\tclassName=\"comics__item-img\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn <ul className=\"comics__grid\">{items}</ul>;\n\t}\n\n\tconst items = renderItems(comicsList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: comicsEnded ? \"none\" : \"block\" }}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\nimport ComicsList from \"../comicsList/ComicsList\";\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<AppBanner />\n\t\t\t<ComicsList />\n\t\t</>\n\t)\n}\n\nexport default ComicsPage;"],"sourceRoot":""}